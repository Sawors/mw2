#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: BO3 BulkEdit (by LanToaster)

# A short description of this BO3 object
Description: This Object was Created with BO3_BulkEdit

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: true

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 200

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: True

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock
SpawnHeightOffset: -2

# The height limits for the BO3.
MinHeight: 0

MaxHeight: 72

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: AIR,GRASS,STONE,SAND,GRAVEL,DIRT,DIRT:1

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 0

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: dontPlace


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(1,0,-2,LOG:13)
Block(2,0,-2,LOG:13)
Block(1,0,-1,LOG:13)
Block(2,0,-1,LOG:13)
Block(3,0,-1,LOG:13)
Block(4,0,-1,LOG:13)
Block(1,0,0,LOG:13)
Block(2,0,0,LOG:13)
Block(3,0,0,LOG:13)
Block(4,0,0,LOG:13)
Block(1,0,1,LOG:13)
Block(2,0,1,LOG:13)
Block(3,0,1,LOG:13)
Block(4,0,1,LOG:13)
Block(2,0,2,LOG:13)
Block(3,0,2,LOG:13)
Block(1,1,-2,LOG:13)
Block(2,1,-2,LOG:13)
Block(1,1,-1,LOG:13)
Block(2,1,-1,LOG:13)
Block(3,1,-1,LOG:13)
Block(4,1,-1,LOG:13)
Block(1,1,0,LOG:13)
Block(2,1,0,LOG:13)
Block(3,1,0,LOG:13)
Block(4,1,0,LOG:13)
Block(1,1,1,LOG:13)
Block(2,1,1,LOG:13)
Block(3,1,1,LOG:13)
Block(4,1,1,LOG:13)
Block(2,1,2,LOG:13)
Block(3,1,2,LOG:13)
Block(1,2,-2,LOG:13)
Block(2,2,-2,LOG:13)
Block(1,2,-1,LOG:13)
Block(2,2,-1,LOG:13)
Block(3,2,-1,LOG:13)
Block(1,2,0,LOG:13)
Block(2,2,0,LOG:13)
Block(3,2,0,LOG:13)
Block(4,2,0,LOG:13)
Block(1,2,1,LOG:13)
Block(2,2,1,LOG:13)
Block(3,2,1,LOG:13)
Block(4,2,1,LOG:13)
Block(2,2,2,LOG:13)
Block(3,2,2,LOG:13)
Block(2,3,-2,LOG:13)
Block(1,3,-1,LOG:13)
Block(2,3,-1,LOG:13)
Block(3,3,-1,LOG:13)
Block(1,3,0,LOG:13)
Block(2,3,0,LOG:13)
Block(3,3,0,LOG:13)
Block(4,3,0,LOG:13)
Block(1,3,1,LOG:13)
Block(2,3,1,LOG:13)
Block(3,3,1,LOG:13)
Block(2,3,2,LOG:13)
Block(3,3,2,LOG:13)
Block(2,4,-2,LOG:13)
Block(1,4,-1,LOG:13)
Block(2,4,-1,LOG:13)
Block(3,4,-1,LOG:13)
Block(1,4,0,LOG:13)
Block(2,4,0,LOG:13)
Block(3,4,0,LOG:13)
Block(4,4,0,LOG:13)
Block(1,4,1,LOG:13)
Block(2,4,1,LOG:13)
Block(3,4,1,LOG:13)
Block(2,4,2,LOG:13)
Block(2,5,-2,LOG:13)
Block(1,5,-1,LOG:13)
Block(2,5,-1,LOG:13)
Block(3,5,-1,LOG:13)
Block(1,5,0,LOG:13)
Block(2,5,0,LOG:13)
Block(3,5,0,LOG:13)
Block(4,5,0,LOG:13)
Block(1,5,1,LOG:13)
Block(2,5,1,LOG:13)
Block(3,5,1,LOG:13)
Block(2,5,2,LOG:13)
Block(2,6,-2,LOG:13)
Block(2,6,-1,LOG:13)
Block(3,6,-1,LOG:13)
Block(1,6,0,LOG:13)
Block(2,6,0,LOG:13)
Block(3,6,0,LOG:13)
Block(4,6,0,LOG:13)
Block(1,6,1,LOG:13)
Block(2,6,1,LOG:13)
Block(3,6,1,LOG:13)
Block(2,6,2,LOG:13)
Block(2,7,-1,LOG:13)
Block(3,7,-1,LOG:13)
Block(1,7,0,LOG:13)
Block(2,7,0,LOG:13)
Block(3,7,0,LOG:13)
Block(1,7,1,LOG:13)
Block(2,7,1,LOG:13)
Block(3,7,1,LOG:13)
Block(2,7,2,LOG:13)
Block(2,8,-1,LOG:13)
Block(3,8,-1,LOG:13)
Block(1,8,0,LOG:13)
Block(2,8,0,LOG:13)
Block(3,8,0,LOG:13)
Block(1,8,1,LOG:13)
Block(2,8,1,LOG:13)
Block(3,8,1,LOG:13)
Block(2,8,2,LOG:13)
Block(2,9,-1,LOG:13)
Block(3,9,-1,LOG:13)
Block(1,9,0,LOG:13)
Block(2,9,0,LOG:13)
Block(3,9,0,LOG:13)
Block(1,9,1,LOG:13)
Block(2,9,1,LOG:13)
Block(3,9,1,LOG:13)
Block(2,9,2,LOG:13)
Block(2,10,-1,LOG:13)
Block(3,10,-1,LOG:13)
Block(1,10,0,LOG:13)
Block(2,10,0,LOG:13)
Block(3,10,0,LOG:13)
Block(1,10,1,LOG:13)
Block(2,10,1,LOG:13)
Block(3,10,1,LOG:13)
Block(2,11,-1,LOG:13)
Block(3,11,-1,LOG:13)
Block(1,11,0,LOG:13)
Block(2,11,0,LOG:13)
Block(3,11,0,LOG:13)
Block(1,11,1,LOG:13)
Block(2,11,1,LOG:13)
Block(3,11,1,LOG:13)
Block(2,12,-1,LOG:13)
Block(3,12,-1,LOG:13)
Block(1,12,0,LOG:13)
Block(2,12,0,LOG:13)
Block(3,12,0,LOG:13)
Block(1,12,1,LOG:13)
Block(2,12,1,LOG:13)
Block(3,12,1,LOG:13)
Block(2,13,-1,LOG:13)
Block(3,13,-1,LOG:13)
Block(1,13,0,LOG:13)
Block(2,13,0,LOG:13)
Block(3,13,0,LOG:13)
Block(1,13,1,LOG:13)
Block(2,13,1,LOG:13)
Block(3,13,1,LOG:13)
Block(2,14,-1,LOG:13)
Block(3,14,-1,LOG:13)
Block(1,14,0,LOG:13)
Block(2,14,0,LOG:13)
Block(3,14,0,LOG:13)
Block(1,14,1,LOG:13)
Block(2,14,1,LOG:13)
Block(3,14,1,LOG:13)
Block(3,14,2,LOG:13)
Block(4,15,-3,SNOW_BLOCK)
Block(2,15,-1,LOG:13)
Block(1,15,0,LOG:13)
Block(2,15,0,LOG:13)
Block(3,15,0,LOG:13)
Block(2,15,1,LOG:13)
Block(3,15,1,LOG:13)
Block(4,15,3,LOG:13)
Block(5,16,-5,SNOW_BLOCK)
Block(6,16,-5,SNOW_BLOCK)
Block(5,16,-4,SNOW_BLOCK)
Block(3,16,-2,LOG:13)
Block(2,16,-1,LOG:13)
Block(1,16,0,LOG:13)
Block(2,16,0,LOG:13)
Block(3,16,0,LOG:13)
Block(2,16,1,LOG:13)
Block(3,16,1,LOG:13)
Block(6,16,2,SNOW_BLOCK)
Block(4,16,3,LOG:13)
Block(6,16,3,SNOW_BLOCK)
Block(3,16,4,SNOW_BLOCK)
Block(7,16,4,SNOW_BLOCK)
Block(-1,17,-4,SNOW_BLOCK)
Block(-1,17,-3,SNOW_BLOCK)
Block(0,17,-3,SNOW_BLOCK)
Block(4,17,-3,LOG:13)
Block(5,17,-3,SNOW_BLOCK)
Block(1,17,-1,LOG:13)
Block(1,17,0,LOG:13)
Block(2,17,0,LOG:13)
Block(3,17,0,LOG:13)
Block(2,17,1,LOG:13)
Block(3,17,1,LOG:13)
Block(4,17,2,SNOW_BLOCK)
Block(6,17,2,SNOW_BLOCK)
Block(4,17,4,SNOW_BLOCK)
Block(5,17,4,LOG:13)
Block(5,17,6,SNOW_BLOCK)
Block(1,18,-4,SNOW_BLOCK)
Block(4,18,-4,SNOW_BLOCK)
Block(5,18,-4,SNOW_BLOCK)
Block(6,18,-4,SNOW_BLOCK)
Block(0,18,-3,SNOW_BLOCK)
Block(1,18,-3,SNOW_BLOCK)
Block(3,18,-3,SNOW_BLOCK)
Block(5,18,-3,SNOW_BLOCK)
Block(0,18,-2,LOG:13)
Block(2,18,-2,SNOW_BLOCK)
Block(3,18,-2,SNOW_BLOCK)
Block(4,18,-1,SNOW_BLOCK)
Block(5,18,-1,SNOW_BLOCK)
Block(2,18,0,LOG:13)
Block(3,18,0,LOG:13)
Block(6,18,0,SNOW_BLOCK)
Block(7,18,0,SNOW_BLOCK)
Block(2,18,1,LOG:13)
Block(4,18,1,LOG:13)
Block(5,18,2,SNOW_BLOCK)
Block(-1,18,3,SNOW_BLOCK)
Block(5,18,3,SNOW_BLOCK)
Block(-2,18,4,SNOW_BLOCK)
Block(-1,18,4,SNOW_BLOCK)
Block(0,18,4,SNOW_BLOCK)
Block(4,18,4,SNOW_BLOCK)
Block(5,18,5,SNOW_BLOCK)
Block(-2,19,-4,SNOW_BLOCK)
Block(1,19,-4,SNOW_BLOCK)
Block(-2,19,-3,SNOW_BLOCK)
Block(-1,19,-3,LOG:13)
Block(0,19,-3,SNOW_BLOCK)
Block(1,19,-3,SNOW_BLOCK)
Block(3,19,-3,SNOW_BLOCK)
Block(4,19,-3,SNOW_BLOCK)
Block(0,19,-2,SNOW_BLOCK)
Block(1,19,-2,SNOW_BLOCK)
Block(2,19,0,LOG:13)
Block(3,19,0,LOG:13)
Block(6,19,0,SNOW_BLOCK)
Block(2,19,1,LOG:13)
Block(5,19,1,LOG:13)
Block(6,19,1,SNOW_BLOCK)
Block(7,19,1,SNOW_BLOCK)
Block(-2,19,2,SNOW_BLOCK)
Block(0,19,2,SNOW_BLOCK)
Block(1,19,2,LOG:13)
Block(6,19,2,LOG:13)
Block(7,19,2,SNOW_BLOCK)
Block(8,19,2,SNOW_BLOCK)
Block(0,19,3,SNOW_BLOCK)
Block(5,19,3,SNOW_BLOCK)
Block(6,19,3,SNOW_BLOCK)
Block(-1,19,4,SNOW_BLOCK)
Block(1,19,4,SNOW_BLOCK)
Block(1,19,5,SNOW_BLOCK)
Block(-1,19,6,SNOW_BLOCK)
Block(-2,20,-5,SNOW_BLOCK)
Block(-1,20,-3,SNOW_BLOCK)
Block(-1,20,-2,SNOW_BLOCK)
Block(0,20,-2,SNOW_BLOCK)
Block(2,20,0,LOG:13)
Block(3,20,0,LOG:13)
Block(6,20,0,SNOW_BLOCK)
Block(2,20,1,LOG:13)
Block(5,20,1,SNOW_BLOCK)
Block(6,20,2,SNOW_BLOCK)
Block(7,20,2,SNOW_BLOCK)
Block(8,20,2,SNOW_BLOCK)
Block(0,20,3,LOG:13)
Block(-3,20,4,SNOW_BLOCK)
Block(-2,20,4,SNOW_BLOCK)
Block(-1,20,4,LOG:13)
Block(0,20,4,SNOW_BLOCK)
Block(5,20,4,SNOW_BLOCK)
Block(6,20,4,SNOW_BLOCK)
Block(-1,20,5,SNOW_BLOCK)
Block(0,20,5,SNOW_BLOCK)
Block(-2,20,6,SNOW_BLOCK)
Block(-1,20,6,SNOW_BLOCK)
Block(0,20,6,SNOW_BLOCK)
Block(5,21,-6,SNOW_BLOCK)
Block(6,21,-5,SNOW_BLOCK)
Block(4,21,-1,LOG:13)
Block(2,21,0,LOG:13)
Block(3,21,0,LOG:13)
Block(2,21,1,LOG:13)
Block(-1,21,2,SNOW_BLOCK)
Block(-3,21,3,SNOW_BLOCK)
Block(-3,21,4,SNOW_BLOCK)
Block(-1,21,4,SNOW_BLOCK)
Block(0,21,4,SNOW_BLOCK)
Block(-2,21,5,SNOW_BLOCK)
Block(7,22,-6,SNOW_BLOCK)
Block(5,22,-4,SNOW_BLOCK)
Block(6,22,-4,LOG:13)
Block(8,22,-4,SNOW_BLOCK)
Block(5,22,-3,LOG:13)
Block(6,22,-3,SNOW_BLOCK)
Block(5,22,-2,LOG:13)
Block(6,22,-2,SNOW_BLOCK)
Block(7,22,-2,SNOW_BLOCK)
Block(2,22,0,LOG:13)
Block(3,22,0,LOG:13)
Block(2,22,1,LOG:13)
Block(7,23,-5,SNOW_BLOCK)
Block(-1,23,-4,SNOW_BLOCK)
Block(6,23,-4,SNOW_BLOCK)
Block(8,23,-4,SNOW_BLOCK)
Block(6,23,-3,SNOW_BLOCK)
Block(7,23,-3,SNOW_BLOCK)
Block(2,23,0,LOG:13)
Block(2,23,1,LOG:13)
Block(4,23,2,SNOW_BLOCK)
Block(-2,24,-5,SNOW_BLOCK)
Block(-1,24,-5,SNOW_BLOCK)
Block(6,24,-5,SNOW_BLOCK)
Block(0,24,-4,SNOW_BLOCK)
Block(1,24,-4,SNOW_BLOCK)
Block(6,24,-4,SNOW_BLOCK)
Block(-3,24,-3,SNOW_BLOCK)
Block(-1,24,-3,SNOW_BLOCK)
Block(-3,24,-2,SNOW_BLOCK)
Block(1,24,-1,LOG:13)
Block(2,24,0,LOG:13)
Block(3,24,2,LOG:13)
Block(5,24,3,SNOW_BLOCK)
Block(6,24,3,SNOW_BLOCK)
Block(-2,25,-5,SNOW_BLOCK)
Block(-1,25,-5,SNOW_BLOCK)
Block(-1,25,-4,SNOW_BLOCK)
Block(-2,25,-3,SNOW_BLOCK)
Block(-1,25,-3,LOG:13)
Block(-3,25,-2,SNOW_BLOCK)
Block(-2,25,-2,SNOW_BLOCK)
Block(0,25,-2,LOG:13)
Block(-1,25,-1,SNOW_BLOCK)
Block(2,25,0,LOG:13)
Block(4,25,2,SNOW_BLOCK)
Block(5,25,2,SNOW_BLOCK)
Block(6,25,2,SNOW_BLOCK)
Block(4,25,3,LOG:13)
Block(5,25,3,SNOW_BLOCK)
Block(3,25,4,SNOW_BLOCK)
Block(6,25,4,SNOW_BLOCK)
Block(4,25,5,SNOW_BLOCK)
Block(-3,26,-3,SNOW_BLOCK)
Block(0,26,-3,SNOW_BLOCK)
Block(3,26,-3,SNOW_BLOCK)
Block(-3,26,-2,SNOW_BLOCK)
Block(2,26,-2,SNOW_BLOCK)
Block(-2,26,-1,SNOW_BLOCK)
Block(2,26,0,LOG:13)
Block(3,26,1,SNOW_BLOCK)
Block(3,26,3,SNOW_BLOCK)
Block(4,26,3,SNOW_BLOCK)
Block(5,26,3,SNOW_BLOCK)
Block(6,26,4,SNOW_BLOCK)
Block(2,27,-4,SNOW_BLOCK)
Block(-1,27,-3,SNOW_BLOCK)
Block(1,27,-3,SNOW_BLOCK)
Block(1,27,-2,SNOW_BLOCK)
Block(2,27,-2,SNOW_BLOCK)
Block(3,27,-2,SNOW_BLOCK)
Block(4,27,-2,SNOW_BLOCK)
Block(5,27,-2,SNOW_BLOCK)
Block(4,27,-1,SNOW_BLOCK)
Block(1,27,0,SNOW_BLOCK)
Block(2,27,0,LOG:13)
Block(3,27,0,LOG:13)
Block(4,27,0,SNOW_BLOCK)
Block(5,27,1,SNOW_BLOCK)
Block(6,27,1,SNOW_BLOCK)
Block(5,27,3,SNOW_BLOCK)
Block(4,27,4,SNOW_BLOCK)
Block(2,28,-4,SNOW_BLOCK)
Block(0,28,-2,SNOW_BLOCK)
Block(2,28,-2,SNOW_BLOCK)
Block(4,28,-2,SNOW_BLOCK)
Block(5,28,-2,SNOW_BLOCK)
Block(4,28,-1,SNOW_BLOCK)
Block(0,28,0,SNOW_BLOCK)
Block(1,28,0,SNOW_BLOCK)
Block(2,28,0,LOG:13)
Block(3,28,0,SNOW_BLOCK)
Block(4,28,0,LOG:13)
Block(6,28,0,SNOW_BLOCK)
Block(0,28,1,SNOW_BLOCK)
Block(2,28,1,SNOW_BLOCK)
Block(4,28,2,SNOW_BLOCK)
Block(0,29,-4,SNOW_BLOCK)
Block(3,29,-3,SNOW_BLOCK)
Block(4,29,-3,SNOW_BLOCK)
Block(-1,29,-2,SNOW_BLOCK)
Block(2,29,-2,SNOW_BLOCK)
Block(2,29,-1,SNOW_BLOCK)
Block(4,29,-1,SNOW_BLOCK)
Block(0,29,0,SNOW_BLOCK)
Block(2,29,0,LOG:13)
Block(4,29,0,SNOW_BLOCK)
Block(6,29,0,SNOW_BLOCK)
Block(2,29,1,SNOW_BLOCK)
Block(1,30,-3,SNOW_BLOCK)
Block(-1,30,-2,SNOW_BLOCK)
Block(2,30,-2,SNOW_BLOCK)
Block(4,30,-2,SNOW_BLOCK)
Block(5,30,-2,SNOW_BLOCK)
Block(1,30,-1,SNOW_BLOCK)
Block(1,30,0,SNOW_BLOCK)
Block(2,30,0,LOG:13)
Block(2,30,2,SNOW_BLOCK)
Block(3,30,2,SNOW_BLOCK)
Block(4,30,2,SNOW_BLOCK)
Block(1,30,3,SNOW_BLOCK)
Block(1,31,-3,SNOW_BLOCK)
Block(2,31,-3,SNOW_BLOCK)
Block(3,31,-3,SNOW_BLOCK)
Block(4,31,-3,SNOW_BLOCK)
Block(1,31,-2,SNOW_BLOCK)
Block(0,31,-1,SNOW_BLOCK)
Block(1,31,-1,SNOW_BLOCK)
Block(0,31,0,SNOW_BLOCK)
Block(2,31,0,LOG:13)
Block(5,31,0,SNOW_BLOCK)
Block(4,31,1,SNOW_BLOCK)
Block(2,32,-1,SNOW_BLOCK)
Block(4,32,-1,SNOW_BLOCK)
Block(1,32,0,SNOW_BLOCK)
Block(2,32,0,LOG:13)
Block(0,32,1,SNOW_BLOCK)
Block(1,32,1,SNOW_BLOCK)
Block(2,32,1,SNOW_BLOCK)
Block(2,33,-2,SNOW_BLOCK)
Block(1,33,0,SNOW_BLOCK)
Block(2,33,0,LOG:13)
Block(4,33,0,SNOW_BLOCK)
Block(3,33,2,SNOW_BLOCK)
Block(4,33,2,SNOW_BLOCK)
Block(3,34,-2,SNOW_BLOCK)
Block(2,34,0,LOG:13)
Block(5,34,0,SNOW_BLOCK)
Block(4,34,1,SNOW_BLOCK)
Block(0,34,2,SNOW_BLOCK)
Block(2,34,2,SNOW_BLOCK)
Block(3,34,3,SNOW_BLOCK)
Block(2,35,-3,SNOW_BLOCK)
Block(3,35,-3,SNOW_BLOCK)
Block(1,35,-2,SNOW_BLOCK)
Block(1,35,-1,SNOW_BLOCK)
Block(2,35,-1,SNOW_BLOCK)
Block(0,35,0,SNOW_BLOCK)
Block(2,35,0,LOG:13)
Block(3,35,0,SNOW_BLOCK)
Block(4,35,0,SNOW_BLOCK)
Block(5,35,0,SNOW_BLOCK)
Block(1,35,1,SNOW_BLOCK)
Block(1,35,2,SNOW_BLOCK)
Block(2,35,3,SNOW_BLOCK)
Block(2,36,-1,SNOW_BLOCK)
Block(3,36,-1,SNOW_BLOCK)
Block(1,36,0,SNOW_BLOCK)
Block(2,36,0,LOG:13)
Block(0,37,-1,SNOW_BLOCK)
Block(1,37,-1,SNOW_BLOCK)
Block(4,37,-1,SNOW_BLOCK)
Block(2,37,0,LOG:13)
Block(3,37,0,SNOW_BLOCK)
Block(4,37,0,SNOW_BLOCK)
Block(1,37,1,SNOW_BLOCK)
Block(2,38,-2,SNOW_BLOCK)
Block(3,38,-2,SNOW_BLOCK)
Block(0,38,0,SNOW_BLOCK)
Block(2,38,0,LOG:13)
Block(1,38,1,SNOW_BLOCK)
Block(2,38,1,SNOW_BLOCK)
Block(2,38,2,SNOW_BLOCK)
Block(0,39,0,SNOW_BLOCK)
Block(1,39,0,SNOW_BLOCK)
Block(2,39,0,LOG:13)
Block(3,39,0,SNOW_BLOCK)
Block(0,39,1,SNOW_BLOCK)
Block(3,40,-1,SNOW_BLOCK)
Block(2,40,0,LOG:13)
Block(3,40,0,SNOW_BLOCK)
Block(2,41,0,LOG:13)
Block(2,41,1,SNOW_BLOCK)
Block(1,42,-1,SNOW_BLOCK)
Block(2,42,-1,SNOW_BLOCK)
Block(1,42,0,SNOW_BLOCK)
Block(2,42,0,LOG:13)
Block(1,42,1,SNOW_BLOCK)
Block(2,42,1,SNOW_BLOCK)
Block(3,42,1,SNOW_BLOCK)
Block(2,43,-1,SNOW_BLOCK)
Block(2,43,0,LOG:13)
Block(3,43,0,SNOW_BLOCK)
Block(2,43,1,SNOW_BLOCK)
Block(1,44,0,SNOW_BLOCK)
Block(2,44,0,LOG:13)
Block(3,44,0,SNOW_BLOCK)
Block(2,45,0,SNOW_BLOCK)
Block(2,46,0,SNOW_BLOCK)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
BlockCheck(0,-1,0,GRASS,DIRT,DIRT:1,STONE)
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank

