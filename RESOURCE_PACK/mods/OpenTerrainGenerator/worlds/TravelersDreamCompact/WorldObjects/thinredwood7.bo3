#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: BO3 BulkEdit (by LanToaster)

# A short description of this BO3 object
Description: This Object was Created with BO3_BulkEdit

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: true

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock
SpawnHeightOffset: -2
# The height limits for the BO3.
MinHeight: 0

MaxHeight: 75

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: AIR,GRASS,DIRT,DIRT:1,STONE,DIRT:2,GRASS,DIRT,DIRT:1,STONE,DIRT:2

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 0

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: dontPlace


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(-4,0,-4,LOG:12)
Block(-3,0,-4,LOG:12)
Block(-2,0,-4,LOG:12)
Block(-4,0,-3,LOG:12)
Block(-3,0,-3,LOG:12)
Block(-2,0,-3,LOG:12)
Block(-4,0,-2,LOG:12)
Block(-3,0,-2,LOG:12)
Block(-4,1,-4,LOG:12)
Block(-3,1,-4,LOG:12)
Block(-4,1,-3,LOG:12)
Block(-3,1,-3,LOG:12)
Block(-2,1,-3,LOG:12)
Block(-4,1,-2,LOG:12)
Block(-3,1,-2,LOG:12)
Block(-3,2,-4,LOG:12)
Block(-4,2,-3,LOG:12)
Block(-3,2,-3,LOG:12)
Block(-2,2,-3,LOG:12)
Block(-3,2,-2,LOG:12)
Block(-3,3,-4,LOG:12)
Block(-4,3,-3,LOG:12)
Block(-3,3,-3,LOG:12)
Block(-3,3,-2,LOG:12)
Block(-3,4,-4,LOG:12)
Block(-4,4,-3,LOG:12)
Block(-3,4,-3,LOG:12)
Block(-3,4,-2,LOG:12)
Block(-3,5,-4,LOG:12)
Block(-4,5,-3,LOG:12)
Block(-3,5,-3,LOG:12)
Block(-3,5,-2,LOG:12)
Block(-3,6,-4,LOG:12)
Block(-4,6,-3,LOG:12)
Block(-3,6,-3,LOG:12)
Block(-3,6,-2,LOG:12)
Block(-3,7,-4,LOG:12)
Block(-4,7,-3,LOG:12)
Block(-3,7,-3,LOG:12)
Block(-4,8,-3,LOG:12)
Block(-3,8,-3,LOG:12)
Block(-4,9,-3,LOG:12)
Block(-3,9,-3,LOG:12)
Block(-4,10,-3,LOG:12)
Block(-3,10,-3,LOG:12)
Block(-4,11,-3,LOG:12)
Block(-3,11,-3,LOG:12)
Block(-4,12,-3,LOG:12)
Block(-3,12,-3,LOG:12)
Block(-4,13,-5,LEAVES:12)
Block(-4,13,-4,LEAVES:12)
Block(-3,13,-4,LEAVES:12)
Block(-6,13,-3,LEAVES:12)
Block(-5,13,-3,LEAVES:12)
Block(-4,13,-3,LOG:12)
Block(-3,13,-3,LOG:12)
Block(-2,13,-3,LEAVES:12)
Block(-5,13,-2,LEAVES:12)
Block(-4,13,-2,LEAVES:12)
Block(-3,13,-2,LEAVES:12)
Block(-5,13,-1,LEAVES:12)
Block(-6,14,-7,LEAVES:12)
Block(-6,14,-6,LEAVES:12)
Block(-5,14,-6,LEAVES:12)
Block(-1,14,-6,LEAVES:12)
Block(-5,14,-5,LEAVES:12)
Block(-4,14,-5,LEAVES:12)
Block(-2,14,-5,LEAVES:12)
Block(-1,14,-5,LEAVES:12)
Block(-8,14,-4,LEAVES:12)
Block(-7,14,-4,LEAVES:12)
Block(-3,14,-4,LEAVES:12)
Block(-2,14,-4,LEAVES:12)
Block(-7,14,-3,LEAVES:12)
Block(-6,14,-3,LEAVES:12)
Block(-4,14,-3,LOG:12)
Block(-3,14,-3,LOG:12)
Block(-2,14,-3,LEAVES:12)
Block(-1,14,-3,LEAVES:12)
Block(-3,14,-2,LEAVES:12)
Block(-1,14,-2,LEAVES:12)
Block(0,14,-2,LEAVES:12)
Block(1,14,-2,LEAVES:12)
Block(-6,14,-1,LEAVES:12)
Block(-5,14,-1,LEAVES:12)
Block(-3,14,-1,LEAVES:12)
Block(-6,14,0,LEAVES:12)
Block(-3,14,0,LEAVES:12)
Block(-2,14,0,LEAVES:12)
Block(-6,14,1,LEAVES:12)
Block(-6,15,-8,LEAVES:12)
Block(-6,15,-7,LEAVES:12)
Block(-1,15,-7,LEAVES:12)
Block(0,15,-7,LEAVES:12)
Block(-1,15,-6,LEAVES:12)
Block(-9,15,-4,LEAVES:12)
Block(-8,15,-4,LEAVES:12)
Block(-4,15,-4,LEAVES:12)
Block(-3,15,-4,LEAVES:12)
Block(-5,15,-3,LEAVES:12)
Block(-4,15,-3,LOG:12)
Block(-3,15,-3,LOG:12)
Block(-2,15,-3,LEAVES:12)
Block(-4,15,-2,LEAVES:12)
Block(1,15,-2,LEAVES:12)
Block(1,15,-1,LEAVES:12)
Block(2,15,-1,LEAVES:12)
Block(-2,15,0,LEAVES:12)
Block(-7,15,1,LEAVES:12)
Block(-6,15,1,LEAVES:12)
Block(-2,15,1,LEAVES:12)
Block(-1,15,1,LEAVES:12)
Block(-7,15,2,LEAVES:12)
Block(-1,15,2,LEAVES:12)
Block(-4,16,-6,LEAVES:12)
Block(-3,16,-6,LEAVES:12)
Block(-4,16,-5,LEAVES:12)
Block(-5,16,-4,LEAVES:12)
Block(-4,16,-4,LEAVES:12)
Block(-1,16,-4,LEAVES:12)
Block(-6,16,-3,LEAVES:12)
Block(-5,16,-3,LEAVES:12)
Block(-4,16,-3,LOG:12)
Block(-3,16,-3,LOG:12)
Block(-2,16,-3,LEAVES:12)
Block(-1,16,-3,LEAVES:12)
Block(-7,16,-2,LEAVES:12)
Block(-6,16,-2,LEAVES:12)
Block(-4,16,-2,LEAVES:12)
Block(-8,16,-1,LEAVES:12)
Block(-7,16,-1,LEAVES:12)
Block(-4,16,-1,LEAVES:12)
Block(-4,16,0,LEAVES:12)
Block(-4,16,1,LEAVES:12)
Block(-5,17,-8,LEAVES:12)
Block(-3,17,-8,LEAVES:12)
Block(-5,17,-7,LEAVES:12)
Block(-3,17,-7,LEAVES:12)
Block(-7,17,-6,LEAVES:12)
Block(-3,17,-6,LEAVES:12)
Block(-7,17,-5,LEAVES:12)
Block(-6,17,-5,LEAVES:12)
Block(0,17,-5,LEAVES:12)
Block(1,17,-5,LEAVES:12)
Block(-6,17,-4,LEAVES:12)
Block(-5,17,-4,LEAVES:12)
Block(-1,17,-4,LEAVES:12)
Block(0,17,-4,LEAVES:12)
Block(-4,17,-3,LOG:12)
Block(-3,17,-3,LOG:12)
Block(-2,17,-3,LEAVES:12)
Block(-3,17,-2,LEAVES:12)
Block(-2,17,-2,LEAVES:12)
Block(-1,17,-2,LEAVES:12)
Block(-1,17,-1,LEAVES:12)
Block(0,17,-1,LEAVES:12)
Block(-5,17,1,LEAVES:12)
Block(-4,17,1,LEAVES:12)
Block(-5,17,2,LEAVES:12)
Block(-3,18,-5,LEAVES:12)
Block(-2,18,-5,LEAVES:12)
Block(-4,18,-4,LEAVES:12)
Block(-3,18,-4,LEAVES:12)
Block(-5,18,-3,LEAVES:12)
Block(-4,18,-3,LOG:12)
Block(-3,18,-3,LOG:12)
Block(-2,18,-3,LEAVES:12)
Block(-5,18,-2,LEAVES:12)
Block(-4,18,-2,LEAVES:12)
Block(-3,18,-2,LEAVES:12)
Block(-6,18,-1,LEAVES:12)
Block(-5,18,-1,LEAVES:12)
Block(-3,18,-1,LEAVES:12)
Block(-2,18,-1,LEAVES:12)
Block(-6,18,0,LEAVES:12)
Block(-2,18,0,LEAVES:12)
Block(1,18,0,LEAVES:12)
Block(-2,18,1,LEAVES:12)
Block(-5,19,-7,LEAVES:12)
Block(-5,19,-6,LEAVES:12)
Block(-2,19,-6,LEAVES:12)
Block(-1,19,-6,LEAVES:12)
Block(-5,19,-5,LEAVES:12)
Block(-4,19,-5,LEAVES:12)
Block(-2,19,-5,LEAVES:12)
Block(-4,19,-4,LEAVES:12)
Block(-6,19,-3,LEAVES:12)
Block(-5,19,-3,LEAVES:12)
Block(-4,19,-3,LOG:12)
Block(-3,19,-3,LOG:12)
Block(-2,19,-3,LEAVES:12)
Block(-1,19,-3,LEAVES:12)
Block(-3,19,-2,LEAVES:12)
Block(-6,19,0,LEAVES:12)
Block(-8,20,-4,LEAVES:12)
Block(-7,20,-4,LEAVES:12)
Block(-6,20,-4,LEAVES:12)
Block(-3,20,-4,LEAVES:12)
Block(-6,20,-3,LEAVES:12)
Block(-4,20,-3,LOG:12)
Block(-3,20,-3,LOG:12)
Block(-1,20,-3,LEAVES:12)
Block(-3,20,-2,LEAVES:12)
Block(-1,20,-2,LEAVES:12)
Block(0,20,-2,LEAVES:12)
Block(-3,20,-1,LEAVES:12)
Block(-4,20,0,LEAVES:12)
Block(-3,20,0,LEAVES:12)
Block(-4,20,1,LEAVES:12)
Block(-4,21,-6,LEAVES:12)
Block(-4,21,-5,LEAVES:12)
Block(-3,21,-5,LEAVES:12)
Block(-3,21,-4,LEAVES:12)
Block(-5,21,-3,LEAVES:12)
Block(-4,21,-3,LEAVES:12)
Block(-3,21,-3,LOG:12)
Block(-2,21,-3,LEAVES:12)
Block(-5,21,-2,LEAVES:12)
Block(-4,21,-2,LEAVES:12)
Block(-3,21,-2,LEAVES:12)
Block(-4,21,-1,LEAVES:12)
Block(-3,21,-1,LEAVES:12)
Block(-4,21,0,LEAVES:12)
Block(-4,22,-7,LEAVES:12)
Block(-4,22,-6,LEAVES:12)
Block(-1,22,-4,LEAVES:12)
Block(0,22,-4,LEAVES:12)
Block(-3,22,-3,LOG:12)
Block(-2,22,-3,LEAVES:12)
Block(-1,22,-3,LEAVES:12)
Block(-6,22,-2,LEAVES:12)
Block(-5,22,-2,LEAVES:12)
Block(-3,22,-2,LEAVES:12)
Block(-7,22,-1,LEAVES:12)
Block(-6,22,-1,LEAVES:12)
Block(-3,22,-1,LEAVES:12)
Block(-2,22,-1,LEAVES:12)
Block(-5,22,0,LEAVES:12)
Block(-4,22,0,LEAVES:12)
Block(-2,22,0,LEAVES:12)
Block(-1,22,0,LEAVES:12)
Block(-5,22,1,LEAVES:12)
Block(-5,23,-4,LEAVES:12)
Block(-4,23,-4,LEAVES:12)
Block(-3,23,-4,LEAVES:12)
Block(-4,23,-3,LEAVES:12)
Block(-3,23,-3,LOG:12)
Block(-3,23,-2,LEAVES:12)
Block(-2,24,-6,LEAVES:12)
Block(-7,24,-5,LEAVES:12)
Block(-6,24,-5,LEAVES:12)
Block(-5,24,-5,LEAVES:12)
Block(-3,24,-5,LEAVES:12)
Block(-2,24,-5,LEAVES:12)
Block(-5,24,-4,LEAVES:12)
Block(-3,24,-4,LEAVES:12)
Block(-4,24,-3,LEAVES:12)
Block(-3,24,-3,LOG:12)
Block(-2,24,-3,LEAVES:12)
Block(-5,24,-2,LEAVES:12)
Block(-4,24,-2,LEAVES:12)
Block(-3,24,-2,LEAVES:12)
Block(-3,24,-1,LEAVES:12)
Block(-3,24,0,LEAVES:12)
Block(-3,25,-4,LEAVES:12)
Block(0,25,-4,LEAVES:12)
Block(-3,25,-3,LOG:12)
Block(-2,25,-3,LEAVES:12)
Block(-1,25,-3,LEAVES:12)
Block(-5,25,-2,LEAVES:12)
Block(-2,25,-2,LEAVES:12)
Block(-1,25,-2,LEAVES:12)
Block(-6,25,-1,LEAVES:12)
Block(-5,25,-1,LEAVES:12)
Block(-1,25,-1,LEAVES:12)
Block(-4,25,0,LEAVES:12)
Block(-3,25,0,LEAVES:12)
Block(-4,26,-6,LEAVES:12)
Block(-4,26,-5,LEAVES:12)
Block(-3,26,-5,LEAVES:12)
Block(-3,26,-4,LEAVES:12)
Block(-4,26,-3,LEAVES:12)
Block(-3,26,-3,LOG:12)
Block(-3,26,-2,LEAVES:12)
Block(-2,27,-4,LEAVES:12)
Block(-1,27,-4,LEAVES:12)
Block(-5,27,-3,LEAVES:12)
Block(-4,27,-3,LEAVES:12)
Block(-3,27,-3,LOG:12)
Block(-2,27,-3,LEAVES:12)
Block(-5,27,-2,LEAVES:12)
Block(-3,27,-2,LEAVES:12)
Block(-3,27,-1,LEAVES:12)
Block(-2,27,-1,LEAVES:12)
Block(-3,28,-4,LEAVES:12)
Block(-3,28,-3,LOG:12)
Block(-3,29,-4,LEAVES:12)
Block(-4,29,-3,LEAVES:12)
Block(-3,29,-3,LOG:12)
Block(-2,29,-3,LEAVES:12)
Block(-3,29,-2,LEAVES:12)
Block(-3,30,-4,LEAVES:12)
Block(-4,30,-3,LEAVES:12)
Block(-3,30,-3,LEAVES:12)
Block(-2,30,-3,LEAVES:12)
Block(-3,30,-2,LEAVES:12)
Block(-3,31,-4,LEAVES:12)
Block(-4,31,-3,LEAVES:12)
Block(-3,31,-3,LEAVES:12)
Block(-3,32,-3,LEAVES:12)
Block(-3,33,-3,LEAVES:12)
Block(-3,34,-3,LEAVES:12)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
BlockCheck(0,-1,0,GRASS,DIRT,DIRT:2,STONE,DIRT:1)
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
