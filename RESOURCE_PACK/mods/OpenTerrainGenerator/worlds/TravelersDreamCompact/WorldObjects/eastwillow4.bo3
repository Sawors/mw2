#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: BO3 BulkEdit (by LanToaster)

# A short description of this BO3 object
Description: This Object was Created with BO3_BulkEdit

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: true

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock

# The height limits for the BO3.
MinHeight: 0

MaxHeight: 256

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: AIR

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 0

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: dontPlace


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(1,0,-7,LEAVES:12)
Block(2,0,-5,LEAVES:12)
Block(3,0,-4,LEAVES:12)
Block(-3,0,-1,LOG:12)
Block(-2,0,-1,LOG:12)
Block(-3,0,0,LOG:12)
Block(-2,0,0,LOG:12)
Block(-5,0,6,LEAVES:12)
Block(1,1,-7,LEAVES:12)
Block(4,1,-7,LEAVES:12)
Block(2,1,-5,LEAVES:12)
Block(-7,1,-4,LEAVES:12)
Block(3,1,-4,LEAVES:12)
Block(1,1,-3,LEAVES:12)
Block(-2,1,-1,LOG:12)
Block(-3,1,0,LOG:12)
Block(-2,1,0,LOG:12)
Block(-7,1,3,LEAVES:12)
Block(-6,1,5,LEAVES:12)
Block(-5,1,6,LEAVES:12)
Block(-9,2,-7,LEAVES:12)
Block(1,2,-7,LEAVES:12)
Block(4,2,-7,LEAVES:12)
Block(-8,2,-5,LEAVES:12)
Block(2,2,-5,LEAVES:12)
Block(-7,2,-4,LEAVES:12)
Block(3,2,-4,LEAVES:12)
Block(1,2,-3,LEAVES:12)
Block(4,2,-3,LEAVES:12)
Block(-2,2,-1,LOG:12)
Block(-3,2,0,LOG:12)
Block(-2,2,0,LOG:12)
Block(-7,2,3,LEAVES:12)
Block(-4,2,3,LEAVES:12)
Block(-6,2,5,LEAVES:12)
Block(-5,2,6,LEAVES:12)
Block(-7,2,7,LEAVES:12)
Block(-9,3,-7,LEAVES:12)
Block(-6,3,-7,LEAVES:12)
Block(1,3,-7,LEAVES:12)
Block(4,3,-7,LEAVES:12)
Block(-8,3,-5,LEAVES:12)
Block(2,3,-5,LEAVES:12)
Block(5,3,-5,LEAVES:12)
Block(-7,3,-4,LEAVES:12)
Block(3,3,-4,LEAVES:12)
Block(4,3,-4,LEAVES:12)
Block(-9,3,-3,LEAVES:12)
Block(1,3,-3,LEAVES:12)
Block(4,3,-3,LEAVES:12)
Block(-2,3,-1,LOG:12)
Block(-1,3,-1,LOG:12)
Block(-3,3,0,LOG:12)
Block(-2,3,0,LOG:12)
Block(-7,3,3,LEAVES:12)
Block(-4,3,3,LEAVES:12)
Block(-6,3,5,LEAVES:12)
Block(-5,3,6,LEAVES:12)
Block(-7,3,7,LEAVES:12)
Block(-4,3,7,LEAVES:12)
Block(-9,4,-7,LEAVES:12)
Block(-6,4,-7,LEAVES:12)
Block(1,4,-7,LEAVES:12)
Block(4,4,-7,LEAVES:12)
Block(2,4,-6,LEAVES:12)
Block(3,4,-6,LEAVES:12)
Block(-8,4,-5,LEAVES:12)
Block(2,4,-5,LEAVES:12)
Block(3,4,-5,LEAVES:12)
Block(5,4,-5,LEAVES:12)
Block(-7,4,-4,LEAVES:12)
Block(3,4,-4,LEAVES:12)
Block(5,4,-4,LEAVES:12)
Block(-9,4,-3,LEAVES:12)
Block(-6,4,-3,LEAVES:12)
Block(1,4,-3,LEAVES:12)
Block(3,4,-3,LEAVES:12)
Block(4,4,-3,LEAVES:12)
Block(-1,4,-2,LOG:12)
Block(-2,4,-1,LOG:12)
Block(-1,4,-1,LOG:12)
Block(-3,4,0,LOG:12)
Block(-3,4,1,LOG:12)
Block(-7,4,3,LEAVES:12)
Block(-4,4,3,LEAVES:12)
Block(-6,4,5,LEAVES:12)
Block(-3,4,5,LEAVES:12)
Block(-5,4,6,LEAVES:12)
Block(-4,4,6,LEAVES:12)
Block(-7,4,7,LEAVES:12)
Block(-4,4,7,LEAVES:12)
Block(-9,5,-7,LEAVES:12)
Block(-6,5,-7,LEAVES:12)
Block(3,5,-7,LEAVES:12)
Block(1,5,-6,LEAVES:12)
Block(2,5,-6,LEAVES:12)
Block(3,5,-6,LEAVES:12)
Block(-8,5,-5,LEAVES:12)
Block(-5,5,-5,LEAVES:12)
Block(3,5,-5,LOG:12)
Block(4,5,-5,LEAVES:12)
Block(5,5,-5,LEAVES:12)
Block(-7,5,-4,LEAVES:12)
Block(-6,5,-4,LEAVES:12)
Block(1,5,-4,LEAVES:12)
Block(2,5,-4,LEAVES:12)
Block(3,5,-4,LOG:12)
Block(4,5,-4,LEAVES:12)
Block(5,5,-4,LEAVES:12)
Block(-9,5,-3,LEAVES:12)
Block(-6,5,-3,LEAVES:12)
Block(0,5,-3,LOG:12)
Block(1,5,-3,LEAVES:12)
Block(3,5,-3,LEAVES:12)
Block(-2,5,-2,LOG:12)
Block(-1,5,-2,LOG:12)
Block(0,5,-2,LOG:12)
Block(-2,5,-1,LOG:12)
Block(-1,5,-1,LOG:12)
Block(-3,5,1,LOG:12)
Block(-4,5,2,LOG:12)
Block(-3,5,2,LOG:12)
Block(-7,5,3,LEAVES:12)
Block(-4,5,3,LEAVES:12)
Block(-6,5,4,LEAVES:12)
Block(-5,5,4,LEAVES:12)
Block(-6,5,5,LEAVES:12)
Block(-5,5,5,LOG:12)
Block(-3,5,5,LEAVES:12)
Block(-5,5,6,LOG:12)
Block(-7,5,7,LEAVES:12)
Block(-5,5,7,LEAVES:12)
Block(-4,5,7,LEAVES:12)
Block(-9,6,-7,LEAVES:12)
Block(-6,6,-7,LEAVES:12)
Block(3,6,-7,LEAVES:12)
Block(6,6,-7,LEAVES:12)
Block(-8,6,-6,LEAVES:12)
Block(-7,6,-6,LEAVES:12)
Block(3,6,-6,LEAVES:12)
Block(-8,6,-5,LEAVES:12)
Block(-7,6,-5,LEAVES:12)
Block(-5,6,-5,LEAVES:12)
Block(2,6,-5,LEAVES:12)
Block(3,6,-5,LEAVES:12)
Block(4,6,-5,LEAVES:12)
Block(-7,6,-4,LEAVES:12)
Block(2,6,-4,LOG:12)
Block(3,6,-4,LOG:12)
Block(5,6,-4,LEAVES:12)
Block(-9,6,-3,LEAVES:12)
Block(-7,6,-3,LEAVES:12)
Block(-6,6,-3,LEAVES:12)
Block(0,6,-3,LOG:12)
Block(1,6,-3,LOG:12)
Block(2,6,-3,LOG:12)
Block(3,6,-3,LEAVES:12)
Block(-2,6,-2,LOG:12)
Block(-2,6,-1,LOG:12)
Block(-1,6,-1,LOG:12)
Block(-4,6,2,LOG:12)
Block(-4,6,3,LOG:12)
Block(-7,6,4,LEAVES:12)
Block(-6,6,4,LEAVES:12)
Block(-5,6,4,LOG:12)
Block(-4,6,4,LOG:12)
Block(-5,6,5,LOG:12)
Block(-4,6,5,LEAVES:12)
Block(-3,6,5,LEAVES:12)
Block(2,6,5,LEAVES:12)
Block(-7,6,6,LEAVES:12)
Block(-6,6,6,LEAVES:12)
Block(-5,6,6,LEAVES:12)
Block(-4,6,6,LEAVES:12)
Block(-7,6,7,LEAVES:12)
Block(-5,6,7,LEAVES:12)
Block(3,7,-7,LEAVES:12)
Block(6,7,-7,LEAVES:12)
Block(-9,7,-6,LEAVES:12)
Block(-8,7,-6,LEAVES:12)
Block(-7,7,-6,LEAVES:12)
Block(-7,7,-5,LOG:12)
Block(-6,7,-5,LOG:12)
Block(-5,7,-5,LEAVES:12)
Block(3,7,-5,LEAVES:12)
Block(4,7,-5,LEAVES:12)
Block(-9,7,-4,LEAVES:12)
Block(-8,7,-4,LEAVES:12)
Block(-7,7,-4,LEAVES:12)
Block(-6,7,-4,LOG:12)
Block(-5,7,-4,LOG:12)
Block(3,7,-4,LEAVES:12)
Block(5,7,-4,LEAVES:12)
Block(-9,7,-3,LEAVES:12)
Block(-7,7,-3,LEAVES:12)
Block(3,7,-3,LEAVES:12)
Block(6,7,-3,LEAVES:12)
Block(-3,7,-2,LOG:12)
Block(-2,7,-2,LOG:12)
Block(-1,7,-1,LOG:12)
Block(0,7,2,LEAVES:12)
Block(-5,7,4,LEAVES:12)
Block(1,7,4,LEAVES:12)
Block(-6,7,5,LEAVES:12)
Block(-5,7,5,LEAVES:12)
Block(-4,7,5,LEAVES:12)
Block(2,7,5,LEAVES:12)
Block(-6,7,6,LEAVES:12)
Block(-5,7,6,LEAVES:12)
Block(-5,7,7,LEAVES:12)
Block(3,8,-7,LEAVES:12)
Block(6,8,-7,LEAVES:12)
Block(-7,8,-6,LEAVES:12)
Block(-3,8,-6,LEAVES:12)
Block(-8,8,-5,LEAVES:12)
Block(-7,8,-5,LEAVES:12)
Block(-6,8,-5,LEAVES:12)
Block(4,8,-5,LEAVES:12)
Block(7,8,-5,LEAVES:12)
Block(-8,8,-4,LEAVES:12)
Block(-7,8,-4,LEAVES:12)
Block(-5,8,-4,LOG:12)
Block(5,8,-4,LEAVES:12)
Block(6,8,-4,LEAVES:12)
Block(-7,8,-3,LEAVES:12)
Block(-5,8,-3,LOG:12)
Block(-4,8,-3,LOG:12)
Block(-3,8,-3,LOG:12)
Block(3,8,-3,LEAVES:12)
Block(6,8,-3,LEAVES:12)
Block(-3,8,-2,LOG:12)
Block(-1,8,-2,LOG:12)
Block(-1,8,-1,LOG:12)
Block(0,8,2,LEAVES:12)
Block(3,8,2,LEAVES:12)
Block(1,8,4,LEAVES:12)
Block(-5,8,5,LEAVES:12)
Block(2,8,5,LEAVES:12)
Block(-5,8,6,LEAVES:12)
Block(0,8,6,LEAVES:12)
Block(-5,9,-9,LEAVES:12)
Block(-4,9,-7,LEAVES:12)
Block(3,9,-7,LEAVES:12)
Block(6,9,-7,LEAVES:12)
Block(-3,9,-6,LEAVES:12)
Block(4,9,-6,LEAVES:12)
Block(5,9,-6,LEAVES:12)
Block(-7,9,-5,LEAVES:12)
Block(4,9,-5,LEAVES:12)
Block(5,9,-5,LEAVES:12)
Block(7,9,-5,LEAVES:12)
Block(-7,9,-4,LEAVES:12)
Block(5,9,-4,LEAVES:12)
Block(3,9,-3,LEAVES:12)
Block(5,9,-3,LEAVES:12)
Block(6,9,-3,LEAVES:12)
Block(-1,9,-2,LOG:12)
Block(0,9,-2,LOG:12)
Block(0,9,2,LEAVES:12)
Block(3,9,2,LEAVES:12)
Block(1,9,4,LEAVES:12)
Block(2,9,5,LEAVES:12)
Block(0,9,6,LEAVES:12)
Block(3,9,6,LEAVES:12)
Block(-5,10,-9,LEAVES:12)
Block(-2,10,-9,LEAVES:12)
Block(-4,10,-7,LEAVES:12)
Block(-3,10,-6,LEAVES:12)
Block(3,10,-6,LEAVES:12)
Block(4,10,-6,LEAVES:12)
Block(5,10,-6,LEAVES:12)
Block(-5,10,-5,LEAVES:12)
Block(4,10,-5,LOG:12)
Block(5,10,-5,LOG:12)
Block(6,10,-5,LEAVES:12)
Block(7,10,-5,LEAVES:12)
Block(3,10,-4,LEAVES:12)
Block(4,10,-4,LOG:12)
Block(5,10,-4,LEAVES:12)
Block(6,10,-4,LEAVES:12)
Block(3,10,-3,LEAVES:12)
Block(5,10,-3,LEAVES:12)
Block(-1,10,-2,LOG:12)
Block(0,10,-2,LOG:12)
Block(1,10,-2,LOG:12)
Block(0,10,2,LEAVES:12)
Block(3,10,2,LEAVES:12)
Block(1,10,4,LEAVES:12)
Block(4,10,4,LEAVES:12)
Block(2,10,5,LEAVES:12)
Block(3,10,5,LEAVES:12)
Block(0,10,6,LEAVES:12)
Block(3,10,6,LEAVES:12)
Block(-5,11,-9,LEAVES:12)
Block(-2,11,-9,LEAVES:12)
Block(-4,11,-7,LEAVES:12)
Block(-3,11,-6,LEAVES:12)
Block(5,11,-6,LEAVES:12)
Block(-5,11,-5,LEAVES:12)
Block(-2,11,-5,LEAVES:12)
Block(4,11,-5,LEAVES:12)
Block(5,11,-5,LEAVES:12)
Block(6,11,-5,LEAVES:12)
Block(3,11,-4,LOG:12)
Block(4,11,-4,LOG:12)
Block(5,11,-4,LEAVES:12)
Block(1,11,-3,LOG:12)
Block(2,11,-3,LOG:12)
Block(3,11,-3,LOG:12)
Block(5,11,-3,LEAVES:12)
Block(-2,11,-2,LOG:12)
Block(-1,11,-2,LOG:12)
Block(1,11,-2,LOG:12)
Block(-1,11,-1,LOG:12)
Block(0,11,2,LEAVES:12)
Block(3,11,2,LEAVES:12)
Block(1,11,3,LEAVES:12)
Block(2,11,3,LEAVES:12)
Block(1,11,4,LEAVES:12)
Block(2,11,4,LEAVES:12)
Block(4,11,4,LEAVES:12)
Block(2,11,5,LEAVES:12)
Block(0,11,6,LEAVES:12)
Block(2,11,6,LEAVES:12)
Block(3,11,6,LEAVES:12)
Block(-5,12,-9,LEAVES:12)
Block(-2,12,-9,LEAVES:12)
Block(-4,12,-7,LEAVES:12)
Block(-1,12,-7,LEAVES:12)
Block(-3,12,-6,LEAVES:12)
Block(-2,12,-6,LEAVES:12)
Block(-5,12,-5,LEAVES:12)
Block(-2,12,-5,LEAVES:12)
Block(5,12,-5,LEAVES:12)
Block(1,12,-4,LEAVES:12)
Block(5,12,-4,LEAVES:12)
Block(-2,12,-2,LOG:12)
Block(-1,12,-1,LOG:12)
Block(-1,12,0,LOG:12)
Block(0,12,0,LOG:12)
Block(0,12,3,LEAVES:12)
Block(1,12,3,LOG:12)
Block(2,12,3,LEAVES:12)
Block(2,12,4,LOG:12)
Block(3,12,4,LEAVES:12)
Block(4,12,4,LEAVES:12)
Block(0,12,5,LEAVES:12)
Block(1,12,5,LEAVES:12)
Block(2,12,5,LEAVES:12)
Block(3,12,5,LEAVES:12)
Block(0,12,6,LEAVES:12)
Block(2,12,6,LEAVES:12)
Block(-5,13,-9,LEAVES:12)
Block(-2,13,-9,LEAVES:12)
Block(-4,13,-8,LEAVES:12)
Block(-3,13,-8,LEAVES:12)
Block(-4,13,-7,LEAVES:12)
Block(-3,13,-7,LEAVES:12)
Block(-1,13,-7,LEAVES:12)
Block(-3,13,-6,LEAVES:12)
Block(-5,13,-5,LEAVES:12)
Block(-3,13,-5,LEAVES:12)
Block(-2,13,-5,LEAVES:12)
Block(0,13,-5,LEAVES:12)
Block(-2,13,-4,LOG:12)
Block(1,13,-4,LEAVES:12)
Block(-2,13,-3,LOG:12)
Block(-2,13,-2,LOG:12)
Block(-2,13,-1,LOG:12)
Block(0,13,0,LOG:12)
Block(0,13,1,LOG:12)
Block(0,13,2,LOG:12)
Block(1,13,2,LOG:12)
Block(1,13,3,LOG:12)
Block(2,13,3,LEAVES:12)
Block(1,13,4,LEAVES:12)
Block(2,13,4,LEAVES:12)
Block(3,13,4,LEAVES:12)
Block(1,13,5,LEAVES:12)
Block(2,13,5,LEAVES:12)
Block(2,13,6,LEAVES:12)
Block(-5,14,-8,LEAVES:12)
Block(-4,14,-8,LEAVES:12)
Block(-3,14,-8,LEAVES:12)
Block(-3,14,-7,LOG:12)
Block(-2,14,-7,LEAVES:12)
Block(-1,14,-7,LEAVES:12)
Block(2,14,-7,LEAVES:12)
Block(-5,14,-6,LEAVES:12)
Block(-4,14,-6,LEAVES:12)
Block(-3,14,-6,LOG:12)
Block(-2,14,-6,LEAVES:12)
Block(-5,14,-5,LEAVES:12)
Block(-3,14,-5,LOG:12)
Block(-2,14,-5,LOG:12)
Block(0,14,-5,LEAVES:12)
Block(-2,14,-4,LOG:12)
Block(1,14,-4,LEAVES:12)
Block(-1,14,-3,LEAVES:12)
Block(-2,14,-1,LOG:12)
Block(2,14,4,LEAVES:12)
Block(2,14,5,LEAVES:12)
Block(-3,15,-8,LEAVES:12)
Block(-4,15,-7,LEAVES:12)
Block(-3,15,-7,LEAVES:12)
Block(-2,15,-7,LEAVES:12)
Block(-1,15,-7,LEAVES:12)
Block(2,15,-7,LEAVES:12)
Block(-4,15,-6,LEAVES:12)
Block(-3,15,-6,LEAVES:12)
Block(-3,15,-5,LEAVES:12)
Block(0,15,-5,LEAVES:12)
Block(1,15,-4,LEAVES:12)
Block(-1,15,-3,LEAVES:12)
Block(2,15,-3,LEAVES:12)
Block(-3,15,-1,LOG:12)
Block(-2,15,-1,LOG:12)
Block(-1,15,-1,LOG:12)
Block(-4,15,0,LEAVES:12)
Block(-3,15,0,LOG:12)
Block(-3,16,-7,LEAVES:12)
Block(-1,16,-7,LEAVES:12)
Block(2,16,-7,LEAVES:12)
Block(-3,16,-6,LEAVES:12)
Block(0,16,-5,LEAVES:12)
Block(3,16,-5,LEAVES:12)
Block(1,16,-4,LEAVES:12)
Block(2,16,-4,LEAVES:12)
Block(-6,16,-3,LEAVES:12)
Block(-1,16,-3,LEAVES:12)
Block(2,16,-3,LEAVES:12)
Block(-1,16,-2,LOG:12)
Block(-5,16,-1,LEAVES:12)
Block(-1,16,-1,LOG:12)
Block(-4,16,0,LEAVES:12)
Block(-3,16,0,LOG:12)
Block(-1,17,-7,LEAVES:12)
Block(2,17,-7,LEAVES:12)
Block(0,17,-6,LEAVES:12)
Block(1,17,-6,LEAVES:12)
Block(0,17,-5,LEAVES:12)
Block(1,17,-5,LEAVES:12)
Block(3,17,-5,LEAVES:12)
Block(1,17,-4,LEAVES:12)
Block(-6,17,-3,LEAVES:12)
Block(-3,17,-3,LEAVES:12)
Block(-1,17,-3,LEAVES:12)
Block(0,17,-3,LOG:12)
Block(1,17,-3,LEAVES:12)
Block(2,17,-3,LEAVES:12)
Block(-1,17,-2,LOG:12)
Block(0,17,-2,LOG:12)
Block(-5,17,-1,LEAVES:12)
Block(-4,17,0,LEAVES:12)
Block(-3,17,0,LOG:12)
Block(-6,17,1,LEAVES:12)
Block(-1,18,-6,LEAVES:12)
Block(0,18,-6,LEAVES:12)
Block(1,18,-6,LEAVES:12)
Block(1,18,-5,LOG:12)
Block(2,18,-5,LEAVES:12)
Block(3,18,-5,LEAVES:12)
Block(-1,18,-4,LEAVES:12)
Block(0,18,-4,LEAVES:12)
Block(1,18,-4,LOG:12)
Block(2,18,-4,LEAVES:12)
Block(-6,18,-3,LEAVES:12)
Block(-3,18,-3,LEAVES:12)
Block(-1,18,-3,LEAVES:12)
Block(0,18,-3,LOG:12)
Block(1,18,-3,LOG:12)
Block(-5,18,-1,LEAVES:12)
Block(-4,18,0,LEAVES:12)
Block(-3,18,0,LOG:12)
Block(-6,18,1,LEAVES:12)
Block(-3,18,1,LEAVES:12)
Block(1,19,-6,LEAVES:12)
Block(0,19,-5,LEAVES:12)
Block(1,19,-5,LEAVES:12)
Block(2,19,-5,LEAVES:12)
Block(0,19,-4,LEAVES:12)
Block(1,19,-4,LEAVES:12)
Block(-6,19,-3,LEAVES:12)
Block(-3,19,-3,LEAVES:12)
Block(1,19,-3,LEAVES:12)
Block(-5,19,-1,LEAVES:12)
Block(-3,19,-1,LOG:12)
Block(-2,19,-1,LEAVES:12)
Block(-4,19,0,LEAVES:12)
Block(-3,19,0,LOG:12)
Block(-6,19,1,LEAVES:12)
Block(-3,19,1,LEAVES:12)
Block(1,20,-5,LEAVES:12)
Block(1,20,-4,LEAVES:12)
Block(-6,20,-3,LEAVES:12)
Block(-3,20,-3,LEAVES:12)
Block(-5,20,-2,LEAVES:12)
Block(-4,20,-2,LEAVES:12)
Block(-5,20,-1,LEAVES:12)
Block(-4,20,-1,LOG:12)
Block(-3,20,-1,LOG:12)
Block(-2,20,-1,LEAVES:12)
Block(-4,20,0,LEAVES:12)
Block(-6,20,1,LEAVES:12)
Block(-4,20,1,LEAVES:12)
Block(-3,20,1,LEAVES:12)
Block(-6,21,-2,LEAVES:12)
Block(-5,21,-2,LEAVES:12)
Block(-4,21,-2,LEAVES:12)
Block(-5,21,-1,LOG:12)
Block(-4,21,-1,LOG:12)
Block(-3,21,-1,LEAVES:12)
Block(-2,21,-1,LEAVES:12)
Block(-6,21,0,LEAVES:12)
Block(-5,21,0,LEAVES:12)
Block(-4,21,0,LEAVES:12)
Block(-3,21,0,LEAVES:12)
Block(-6,21,1,LEAVES:12)
Block(-4,21,1,LEAVES:12)
Block(-4,22,-2,LEAVES:12)
Block(-5,22,-1,LEAVES:12)
Block(-4,22,-1,LEAVES:12)
Block(-3,22,-1,LEAVES:12)
Block(-5,22,0,LEAVES:12)
Block(-4,22,0,LEAVES:12)
Block(-4,22,1,LEAVES:12)
Block(-4,23,-1,LEAVES:12)
Block(-4,23,0,LEAVES:12)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
BlockCheck(0,-1,0,GRASS,DIRT,DIRT:2,SAND)
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
