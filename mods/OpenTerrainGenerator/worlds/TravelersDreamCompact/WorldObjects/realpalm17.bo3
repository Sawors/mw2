#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: BO3 BulkEdit (by LanToaster)

# A short description of this BO3 object
Description: This Object was Created with BO3_BulkEdit

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: true

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: True

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock

# The height limits for the BO3.
MinHeight: 0

MaxHeight: 200

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: AIR

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 0

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: dontPlace


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(1,0,-1,LOG:3)
Block(1,1,-1,LOG:3)
Block(1,2,-1,LOG:3)
Block(1,3,-1,LOG:3)
Block(1,4,-1,LOG:3)
Block(1,5,-1,LOG:3)
Block(1,6,-1,LOG:3)
Block(1,7,-1,LOG:3)
Block(1,8,-1,LOG:3)
Block(1,9,-1,LOG:3)
Block(1,10,-1,LOG:3)
Block(1,11,-1,LOG:3)
Block(1,12,-1,LOG:3)
Block(1,13,-1,LOG:3)
Block(1,14,-1,LOG:3)
Block(1,15,-1,LOG:3)
Block(1,16,-1,LOG:3)
Block(1,17,-1,LOG:3)
Block(1,18,-1,LOG:3)
Block(1,19,-1,LOG:3)
Block(1,20,-1,LOG:3)
Block(1,21,-1,LOG:3)
Block(1,22,-1,LOG:3)
Block(1,23,-2,COCOA:8)
Block(1,23,-1,LOG:3)
Block(1,23,0,COCOA:10)
Block(4,24,-4,LEAVES:12)
Block(1,24,-2,COCOA:8)
Block(0,24,-1,COCOA:11)
Block(1,24,-1,LOG:3)
Block(2,24,-1,COCOA:9)
Block(1,24,0,COCOA:10)
Block(5,24,0,LEAVES:12)
Block(-2,25,-4,LEAVES:12)
Block(3,25,-3,LEAVES:12)
Block(2,25,-2,LEAVES:12)
Block(0,25,-1,COCOA:11)
Block(1,25,-1,LOG:3)
Block(3,25,-1,LEAVES:4)
Block(4,25,0,LEAVES:12)
Block(-2,25,2,LEAVES:12)
Block(1,26,-6,LEAVES:12)
Block(-1,26,-3,LEAVES:12)
Block(1,26,-3,LEAVES:12)
Block(0,26,-2,LEAVES:12)
Block(1,26,-1,LOG:3)
Block(2,26,-1,LEAVES:12)
Block(0,26,0,LEAVES:12)
Block(2,26,0,LEAVES:12)
Block(-1,26,1,LEAVES:12)
Block(1,26,2,LEAVES:12)
Block(5,26,3,LEAVES:12)
Block(1,27,-5,LEAVES:12)
Block(6,27,-5,LEAVES:12)
Block(1,27,-4,LEAVES:12)
Block(-4,27,-3,LEAVES:12)
Block(1,27,-2,LEAVES:12)
Block(3,27,-2,LEAVES:12)
Block(-1,27,-1,LEAVES:12)
Block(0,27,-1,LEAVES:12)
Block(1,27,-1,LOG:3)
Block(2,27,-1,LEAVES:12)
Block(1,27,0,LEAVES:12)
Block(1,27,1,LEAVES:12)
Block(3,27,1,LEAVES:12)
Block(4,27,2,LEAVES:12)
Block(5,28,-4,LEAVES:12)
Block(4,28,-3,LEAVES:12)
Block(-3,28,-2,LEAVES:12)
Block(-2,28,-2,LEAVES:12)
Block(1,28,-2,LEAVES:12)
Block(0,28,-1,LEAVES:12)
Block(1,28,-1,LOG:3)
Block(2,28,-1,LEAVES:12)
Block(1,28,0,LEAVES:12)
Block(1,29,-3,LEAVES:12)
Block(-1,29,-1,LEAVES:12)
Block(3,29,-1,LEAVES:12)
Block(2,29,0,LEAVES:12)
Block(1,29,1,LEAVES:12)
Block(1,30,-3,LEAVES:12)
Block(0,30,-2,LEAVES:12)
Block(2,30,-2,LEAVES:12)
Block(-1,30,-1,LEAVES:12)
Block(3,30,-1,LEAVES:12)
Block(0,30,0,LEAVES:12)
Block(2,30,0,LEAVES:12)
Block(1,30,1,LEAVES:12)
Block(1,31,-4,LEAVES:12)
Block(-1,31,-3,LEAVES:12)
Block(3,31,-3,LEAVES:12)
Block(-2,31,-1,LEAVES:12)
Block(4,31,-1,LEAVES:12)
Block(-1,31,1,LEAVES:12)
Block(3,31,1,LEAVES:12)
Block(1,31,2,LEAVES:12)
Block(1,32,-6,LEAVES:4)
Block(-3,32,-5,LEAVES:12)
Block(1,32,-5,LEAVES:12)
Block(5,32,-5,LEAVES:12)
Block(-2,32,-4,LEAVES:12)
Block(4,32,-4,LEAVES:12)
Block(-4,32,-1,LEAVES:4)
Block(-3,32,-1,LEAVES:12)
Block(5,32,-1,LEAVES:12)
Block(6,32,-1,LEAVES:12)
Block(-2,32,2,LEAVES:12)
Block(4,32,2,LEAVES:12)
Block(-3,32,3,LEAVES:12)
Block(1,32,3,LEAVES:12)
Block(5,32,3,LEAVES:12)
Block(0,32,4,LEAVES:12)


#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
BlockCheck(0,-1,0,GRASS,DIRT,DIRT:2,SAND)
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
BlockCheck(0,-1,0,GRASS)
